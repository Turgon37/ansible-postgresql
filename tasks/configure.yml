---

- name: Ensure required directories exists
  file:
    path: '{{ item }}'
    owner: '{{ postgresql_server__service_user }}'
    group: '{{ postgresql_server__service_group }}'
    mode: 0750
    state: directory
  with_items:
    - '{{ postgresql_server__var_directory }}'

- name: "Ensure service group '{{ postgresql_server__service_group }}' is present"
  group:
    name: '{{ postgresql_server__service_group }}'
    system: true
    state: present
  notify: ['restart-postgresql-server']

- name: "Ensure service user '{{ postgresql_server__service_user }}' is present"
  user:
    name: '{{ postgresql_server__service_user }}'
    group: '{{ postgresql_server__service_group }}'
    shell: /bin/bash
    home: '{{ postgresql_server__var_directory }}'
    comment: PostgreSQL Server
    createhome: false
    system: true
    state: present
  notify: ['restart-postgresql-server']

- name: Ensure the locale for lc_collate and lc_ctype is generated
  locale_gen:
    name: '{{ item }}'
    state: present
  with_items:
    - '{{ postgresql_server__locale }}'
    - '{{ postgresql_server__ctype }}'
  when: ansible_os_family == 'Debian'
  notify: ['restart-postgresql-server']

# Todo handle checkmode and changed_when
- name: Ensure the locale for lc_collate and lc_ctype is generated
  command: "localedef -c -i {{ item.split('.')[0] }} -f {{ item.split('.')[1] }} {{ item }}"
  with_items:
    - '{{ postgresql_server__locale }}'
    - '{{ postgresql_server__ctype }}'
  when: ansible_os_family == 'RedHat'
  changed_when: false

- name: Make sure the postgres data directory exists
  file:
    path: '{{ postgresql_server__data_directory }}'
    owner: '{{ postgresql_server__service_user }}'
    group: '{{ postgresql_server__service_group }}'
    mode: 0700
    state: directory

- name: Ensure configuration directory exists
  file:
    path: '{{ postgresql_server__conf_directory }}'
    owner: '{{ postgresql_server__service_user }}'
    group: '{{ postgresql_server__service_group }}'
    mode: 0750
    state: directory

- name: Ensure configuration included directory exists
  file:
    name: '{{ postgresql_server__conf_included_directory }}'
    owner: '{{ postgresql_server__service_user }}'
    group: '{{ postgresql_server__service_group }}'
    mode: 0755
    state: directory

- name: Update configuration file pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: '{{ postgresql_server__hba_file }}'
    owner: '{{ postgresql_server__service_user }}'
    group: '{{ postgresql_server__service_group }}'
    mode: 0640
  notify: ['reload-postgresql-server']

- name: Configure global settings into postgresql.conf
  lineinfile:
    dest: '{{ postgresql_server__conf_directory }}/postgresql.conf'
    regexp: "^#?{{ item.key }}.+$"
    line: "{{ item.key }} = '{{ item.value if item.value is string else item.value.value }}'"
    owner: '{{ postgresql_server__service_user }}'
    group: '{{ postgresql_server__service_group }}'
    mode: 0640
    state: "{{ 'present' if item.value is string else item.value.state|d('present') }}"
  with_dict: '{{ postgresql_server__options }}'
  notify: "{{ ['restart-postgresql-server'] if item.value.restart|d(false)|bool else ['reload-postgresql-server'] }}"
