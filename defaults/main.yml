---
# defaults file for postgresql-server

### INSTALL CONFIGURATION
# ---------------------------------------
# List of packages required for Postgresql installation
postgresql_server__required_packages_names:
  - python-psycopg2

# List of PostgreSQL packages to install
postgresql_server__packages_names:
  - 'postgresql{{ postgresql_server__version_terse }}-server'
  - 'postgresql{{ postgresql_server__version_terse }}'
  - 'postgresql{{ postgresql_server__version_terse }}-contrib'

# Version of postgresql to install
postgresql_server__version: 9.6

postgresql_server__gpg_keys:
  Debian:
    - id: B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc


### SERVICE CONFIGURATION
# ---------------------------------------
postgresql_server__service_user: postgres
postgresql_server__service_group: '{{ postgresql_server__service_user }}'

# The name of the systemd postgresql service
postgresql_server__service_name: 'postgresql-{{ postgresql_server__version }}'

# If true the postgresql service will be started and enabled
postgresql_server__service_enabled: true

# If this is set to true, ansible will automatically restart postgresql daemon on changes
postgresql_server__service_restartable: true

# Path to the must restart stamp file
postgresql_server__service_restart_stamp_file: /var/local/postgresql-must-restart-stamp

# Path to systemd override directory
postgresql_server__systemd_override_options_directory:
  '/etc/systemd/system/{{ postgresql_server__service_name }}.service.d/'


### SERVER CONFIGURATION
# ---------------------------------------
postgresql_server__encoding: UTF-8
postgresql_server__locale: 'en_US.{{ postgresql_server__encoding }}'
postgresql_server__ctype: 'en_US.{{ postgresql_server__encoding }}'

postgresql_server__admin_user: '{{ postgresql_server__service_user }}'
postgresql_server__database_owner: '{{ postgresql_server__admin_user }}'

## pg_hba.conf

# This file controls: which hosts are allowed to connect, how clients
# are authenticated, which PostgreSQL user names they can use, which
# databases they can access.  Records take one of these forms:

postgresql_server__hba_rules_default:
  - type: local
    database: all
    user: '{{ postgresql_server__admin_user }}'
    method: 'peer'
    comment: '"local" is for Unix domain socket connections only'
  - type: local
    database: all
    user: all
    method: 'peer'
  - type: host
    database: all
    user: all
    address: '127.0.0.1/32'
    method: 'md5'
    comment: 'IPv4 local connections:'
  - type: host
    database: all
    user: all
    address: '::1/128'
    method: 'md5'
    comment: 'IPv6 local connections:'

postgresql_server__hba_rules_global: []
postgresql_server__hba_rules_group: []
postgresql_server__hba_rules_host: []
postgresql_server__hba_rules: '{{
  postgresql_server__hba_rules_default
  |union(postgresql_server__hba_rules_global)
  |union(postgresql_server__hba_rules_group)
  |union(postgresql_server__hba_rules_host) }}'

# List of users to be created
postgresql_server__roles: []

# Available profile for users specifications
postgresql_server__role_profiles:
  admin:
    connection_limit: 5
    role_flags:
      - SUPERUSER
      - CREATEROLE
      - CREATEDB
      - INHERIT
      - LOGIN
  simple-applicative-user:
    role_flags:
      - LOGIN

# List of database to be created
postgresql_server__databases: {}


### Configuration files
# ---------------------------------------

# Location of postgres configuration files here
postgresql_server__conf_directory:
  "/etc/postgresql/{{ postgresql_server__version }}\
  {{ (postgresql_server__cluster_name is defined)|ternary('/'~postgresql_server__cluster_name, '') }}"
postgresql_server__conf_included_directory: "{{ postgresql_server__conf_directory }}/conf.d"

# HBA (Host Based Authentication) file
postgresql_server__hba_file: '{{ postgresql_server__conf_directory }}/pg_hba.conf'
# Ident configuration file
postgresql_server__ident_file: '{{ postgresql_server__conf_directory }}/pg_ident.conf'

# Data directory
postgresql_server__var_directory: /var/lib/postgresql
postgresql_server__data_directory:
  "{{ postgresql_server__var_directory }}/\
  {{ postgresql_server__version }}\
  {{ (postgresql_server__cluster_name is defined)|ternary('/'~postgresql_server__cluster_name, '') }}\
  /data"


### Postgresql settings
# ---------------------------------------

postgresql_server__listen_addresses:
  - 127.0.0.1
postgresql_server__port: 5432


postgresql_server__options_default:
  data_directory:
    value: '{{ postgresql_server__data_directory }}'
    restart: true
  hba_file:
    value: '{{ postgresql_server__hba_file }}'
    restart: true
  ident_file:
    value: '{{ postgresql_server__ident_file }}'
    restart: true
  listen_addresses:
    value: "{{ postgresql_server__listen_addresses|join(',') }}"
    restart: true
  port:
    value: '{{ postgresql_server__port|int }}'
    restart: true
  include_dir: '{{ postgresql_server__conf_included_directory }}'
  cluster_name: "{{ postgresql_server__version }}{{ (postgresql_server__cluster_name is defined)|ternary('/'~postgresql_server__cluster_name, '') }}"
  lc_messages: '{{ postgresql_server__locale }}'
  lc_monetary: '{{ postgresql_server__locale }}'
  lc_numeric: '{{ postgresql_server__locale }}'
  lc_time: '{{ postgresql_server__locale }}'

# Dict of options to apply for main configuration file
postgresql_server__options_global: {}
postgresql_server__options_group: {}
postgresql_server__options_host: {}
postgresql_server__options: '{{
  postgresql_server__options_default
  |combine(postgresql_server__options_global)
  |combine(postgresql_server__options_group)
  |combine(postgresql_server__options_host)
  }}'

# Yum settings
postgresql_server__pgdg_dists:
  RedHat: redhat
  CentOS: centos
  Scientific: sl
  SLC: sl
  OracleLinux: oraclelinux
postgresql_server__pgdg_releases:
  redhat:
    9.1: 8
    9.2: 9
    9.3: 3
    9.4: 3
    9.5: 3
    9.6: 3
  centos:
    9.1: 7
    9.2: 8
    9.3: 3
    9.4: 3
    9.5: 3
    9.6: 3
  sl:
    9.1: 8
    9.2: 9
    9.3: 3
    9.4: 3
    9.5: 3
    9.6: 3
  oraclelinux:
    9.1: 8
    9.2: 9
    9.3: 3
    9.4: 3
    9.5: 3
    9.6: 3

postgresql_server__version_terse: "{{ postgresql_server__version|replace('.', '') }}"
postgresql_server__yum_repository_base_url: "https://download.postgresql.org/pub/repos/yum"
postgresql_server__yum_repository_url: "{{ postgresql_server__yum_repository_base_url }}/{{ postgresql_server__version }}/{{ ansible_os_family | lower }}/rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}/pgdg-{{ postgresql_server__pgdg_dists[ansible_distribution] }}{{ postgresql_server__version_terse }}-{{ postgresql_server__version }}-{{ postgresql_server__pgdg_releases.get(postgresql_server__pgdg_dists[ansible_distribution]).get(postgresql_server__version) }}.noarch.rpm"
